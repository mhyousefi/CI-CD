name: 3-Stage CI/CD Pipeline


on:
 push:
   branches: [ main ]
 pull_request:
   branches: [ main ]
 workflow_dispatch:


jobs:
 build:
   name: Build Stage
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v4


     - uses: actions/setup-node@v4
       with:
         node-version: '18'
         cache: 'npm'


     - name: Install dependencies
       run: npm ci


     - name: Build application
       run: |
         mkdir -p dist
          cp -r public dist/
          cp server.js dist/
          cp package.json dist/
          cp package-lock.json dist/
          cd dist && npm ci --only=production


 test:
   name: Test Stage
   runs-on: ubuntu-latest
   needs: build
   steps:
     - uses: actions/checkout@v4


     - uses: actions/setup-node@v4
       with:
         node-version: '18'
         cache: 'npm'


     - name: Install dependencies
       run: npm ci


     - name: Run tests
       run: npm test


     - name: Start server in background
       run: |
         npm start &
         sleep 5


     - name: Health check with retries
       run: |
         for i in {1..10}; do
          curl -f http://localhost:3000/health && break
          echo "Waiting for server to be ready..."
          sleep 2
          done


     - name: Stop background server (optional)
       run: |
         pkill -f "node" || true


 deploy:
   name: Deploy to Render
   runs-on: ubuntu-latest
   needs: test
   if: github.ref == 'refs/heads/main'
   steps:
     - name: Trigger Render Deploy Hook
       run: curl -X POST "$RENDER_DEPLOY_HOOK"
       env:
         RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
